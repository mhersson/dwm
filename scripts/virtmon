#!/usr/bin/env bash

# https://github.com/nixxxon/virtmon

command -v xrandr >/dev/null 2>&1 || {
  echo >&2 "xrandr required but not installed"
  exit 1
}

usage() {
  cat <<EOF
Usage: virtmon [SPLITPOINTS]

First run creates virtual monitors.
Second run deletes all created virtual monitors (ignoring the [SPLITPOINTS] argument).

    [SPLITPOINTS] Comma separated list of numbers between 1-99 (percentage left-right), default is 50
    -h, --help    Display help
EOF
}

if [[ $1 == "-h" ]] || [[ $1 == "--help" ]]; then
  usage
  exit 0
fi

virtual_monitor_name_prefix="VM"

mapfile -t virtual_monitors < <(xrandr --listmonitors | grep "${virtual_monitor_name_prefix}-" | awk '{ print $2 }')
current_virtual_monitor_count=${#virtual_monitors[@]}
if [ "$current_virtual_monitor_count" -gt 0 ]; then
  echo "Deleting $current_virtual_monitor_count virtual monitors"
  for monitor in "${virtual_monitors[@]}"; do
    xrandr --delmonitor "$monitor" >/dev/null
  done
  exit 0
fi

splitpoints_argument=${1-50}

IFS=',' read -ra splitpoints <<<"$splitpoints_argument"
unset IFS
mapfile -t splitpoints < <(printf '%s\0' "${splitpoints[@]}" | sort -z | xargs -0n1)

number_regex='^[0-9]+$'
for splitpoint in "${splitpoints[@]}"; do
  if ! [[ "$splitpoint" =~ $number_regex ]]; then
    echo "Splitpoint must be a number"
    exit 1
  fi

  if [ "$splitpoint" -gt 99 ]; then
    echo "Splitpoint cannot be greater than 99"
    exit 1
  fi

  if [ "$splitpoint" -lt 1 ]; then
    echo "Splitpoint cannot be less than 1"
    exit 1
  fi
done

splitpoint_count=${#splitpoints[@]}
virtual_monitor_count=$((splitpoint_count + 1))

echo "Creating $virtual_monitor_count virtual monitors"

primary_monitor=$(xrandr --current | grep 'primary')
primary_monitor_name=$(echo "$primary_monitor" | awk '{print $1}')
primary_monitor_width=$(echo "$primary_monitor" | awk '{print $4}' | cut -d 'x' -f1)
primary_monitor_height=$(echo "$primary_monitor" | awk '{print $4}' | cut -d 'x' -f2 | cut -d '+' -f1)
primary_monitor_physical_width=$(echo "$primary_monitor" | awk '{print $(NF-2)}' | cut -d 'm' -f1)
primary_monitor_physical_height=$(echo "$primary_monitor" | awk '{print $(NF)}' | cut -d 'm' -f1)

pixel_offset_x=0
physical_offset_x=0
for ((i = 0; i < virtual_monitor_count; i++)); do
  if [ $i -eq "$splitpoint_count" ]; then
    virtual_monitor_width=$((primary_monitor_width - pixel_offset_x))
    virtual_monitor_physical_width=$((primary_monitor_physical_width - physical_offset_x))
  else
    splitpoint=${splitpoints[i]}
    virtual_monitor_width=$((primary_monitor_width * splitpoint / 100 - pixel_offset_x))
    virtual_monitor_physical_width=$((primary_monitor_physical_width * splitpoint / 100 - physical_offset_x))
  fi

  output_name="none"
  if [ $i -eq 0 ]; then
    output_name=$primary_monitor_name
  fi

  xrandr_name="${virtual_monitor_name_prefix}-${i}"
  xrandr_width="${virtual_monitor_width}/${virtual_monitor_physical_width}"
  xrandr_height="${primary_monitor_height}/${primary_monitor_physical_height}"

  xrandr --setmonitor "$xrandr_name" "${xrandr_width}x${xrandr_height}+${pixel_offset_x}+0" "${output_name}" >/dev/null

  pixel_offset_x=$((pixel_offset_x + virtual_monitor_width))
  physical_offset_x=$((physical_offset_x + virtual_monitor_physical_width))
done
